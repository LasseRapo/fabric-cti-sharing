/*
 * Copyright Kungfusoftware.es. All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	smartbft "github.com/hyperledger/fabric-protos-go/orderer/smartbft"
)

// FabricMainChannelSmartBFTApplyConfiguration represents a declarative configuration of the FabricMainChannelSmartBFT type for use
// with apply.
type FabricMainChannelSmartBFTApplyConfiguration struct {
	RequestBatchMaxCount      *uint64                    `json:"request_batch_max_count,omitempty"`
	RequestBatchMaxBytes      *uint64                    `json:"request_batch_max_bytes,omitempty"`
	RequestBatchMaxInterval   *string                    `json:"request_batch_max_interval,omitempty"`
	IncomingMessageBufferSize *uint64                    `json:"incoming_message_buffer_size,omitempty"`
	RequestPoolSize           *uint64                    `json:"request_pool_size,omitempty"`
	RequestForwardTimeout     *string                    `json:"request_forward_timeout,omitempty"`
	RequestComplainTimeout    *string                    `json:"request_complain_timeout,omitempty"`
	RequestAutoRemoveTimeout  *string                    `json:"request_auto_remove_timeout,omitempty"`
	RequestMaxBytes           *uint64                    `json:"request_max_bytes,omitempty"`
	ViewChangeResendInterval  *string                    `json:"view_change_resend_interval,omitempty"`
	ViewChangeTimeout         *string                    `json:"view_change_timeout,omitempty"`
	LeaderHeartbeatTimeout    *string                    `json:"leader_heartbeat_timeout,omitempty"`
	LeaderHeartbeatCount      *uint64                    `json:"leader_heartbeat_count,omitempty"`
	CollectTimeout            *string                    `json:"collect_timeout,omitempty"`
	SyncOnStart               *bool                      `json:"sync_on_start,omitempty"`
	SpeedUpViewChange         *bool                      `json:"speed_up_view_change,omitempty"`
	LeaderRotation            *smartbft.Options_Rotation `json:"leader_rotation,omitempty"`
	DecisionsPerLeader        *uint64                    `json:"decisions_per_leader,omitempty"`
}

// FabricMainChannelSmartBFTApplyConfiguration constructs a declarative configuration of the FabricMainChannelSmartBFT type for use with
// apply.
func FabricMainChannelSmartBFT() *FabricMainChannelSmartBFTApplyConfiguration {
	return &FabricMainChannelSmartBFTApplyConfiguration{}
}

// WithRequestBatchMaxCount sets the RequestBatchMaxCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequestBatchMaxCount field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithRequestBatchMaxCount(value uint64) *FabricMainChannelSmartBFTApplyConfiguration {
	b.RequestBatchMaxCount = &value
	return b
}

// WithRequestBatchMaxBytes sets the RequestBatchMaxBytes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequestBatchMaxBytes field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithRequestBatchMaxBytes(value uint64) *FabricMainChannelSmartBFTApplyConfiguration {
	b.RequestBatchMaxBytes = &value
	return b
}

// WithRequestBatchMaxInterval sets the RequestBatchMaxInterval field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequestBatchMaxInterval field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithRequestBatchMaxInterval(value string) *FabricMainChannelSmartBFTApplyConfiguration {
	b.RequestBatchMaxInterval = &value
	return b
}

// WithIncomingMessageBufferSize sets the IncomingMessageBufferSize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IncomingMessageBufferSize field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithIncomingMessageBufferSize(value uint64) *FabricMainChannelSmartBFTApplyConfiguration {
	b.IncomingMessageBufferSize = &value
	return b
}

// WithRequestPoolSize sets the RequestPoolSize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequestPoolSize field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithRequestPoolSize(value uint64) *FabricMainChannelSmartBFTApplyConfiguration {
	b.RequestPoolSize = &value
	return b
}

// WithRequestForwardTimeout sets the RequestForwardTimeout field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequestForwardTimeout field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithRequestForwardTimeout(value string) *FabricMainChannelSmartBFTApplyConfiguration {
	b.RequestForwardTimeout = &value
	return b
}

// WithRequestComplainTimeout sets the RequestComplainTimeout field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequestComplainTimeout field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithRequestComplainTimeout(value string) *FabricMainChannelSmartBFTApplyConfiguration {
	b.RequestComplainTimeout = &value
	return b
}

// WithRequestAutoRemoveTimeout sets the RequestAutoRemoveTimeout field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequestAutoRemoveTimeout field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithRequestAutoRemoveTimeout(value string) *FabricMainChannelSmartBFTApplyConfiguration {
	b.RequestAutoRemoveTimeout = &value
	return b
}

// WithRequestMaxBytes sets the RequestMaxBytes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequestMaxBytes field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithRequestMaxBytes(value uint64) *FabricMainChannelSmartBFTApplyConfiguration {
	b.RequestMaxBytes = &value
	return b
}

// WithViewChangeResendInterval sets the ViewChangeResendInterval field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ViewChangeResendInterval field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithViewChangeResendInterval(value string) *FabricMainChannelSmartBFTApplyConfiguration {
	b.ViewChangeResendInterval = &value
	return b
}

// WithViewChangeTimeout sets the ViewChangeTimeout field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ViewChangeTimeout field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithViewChangeTimeout(value string) *FabricMainChannelSmartBFTApplyConfiguration {
	b.ViewChangeTimeout = &value
	return b
}

// WithLeaderHeartbeatTimeout sets the LeaderHeartbeatTimeout field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LeaderHeartbeatTimeout field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithLeaderHeartbeatTimeout(value string) *FabricMainChannelSmartBFTApplyConfiguration {
	b.LeaderHeartbeatTimeout = &value
	return b
}

// WithLeaderHeartbeatCount sets the LeaderHeartbeatCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LeaderHeartbeatCount field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithLeaderHeartbeatCount(value uint64) *FabricMainChannelSmartBFTApplyConfiguration {
	b.LeaderHeartbeatCount = &value
	return b
}

// WithCollectTimeout sets the CollectTimeout field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CollectTimeout field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithCollectTimeout(value string) *FabricMainChannelSmartBFTApplyConfiguration {
	b.CollectTimeout = &value
	return b
}

// WithSyncOnStart sets the SyncOnStart field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SyncOnStart field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithSyncOnStart(value bool) *FabricMainChannelSmartBFTApplyConfiguration {
	b.SyncOnStart = &value
	return b
}

// WithSpeedUpViewChange sets the SpeedUpViewChange field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SpeedUpViewChange field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithSpeedUpViewChange(value bool) *FabricMainChannelSmartBFTApplyConfiguration {
	b.SpeedUpViewChange = &value
	return b
}

// WithLeaderRotation sets the LeaderRotation field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LeaderRotation field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithLeaderRotation(value smartbft.Options_Rotation) *FabricMainChannelSmartBFTApplyConfiguration {
	b.LeaderRotation = &value
	return b
}

// WithDecisionsPerLeader sets the DecisionsPerLeader field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DecisionsPerLeader field is set to the value of the last call.
func (b *FabricMainChannelSmartBFTApplyConfiguration) WithDecisionsPerLeader(value uint64) *FabricMainChannelSmartBFTApplyConfiguration {
	b.DecisionsPerLeader = &value
	return b
}
