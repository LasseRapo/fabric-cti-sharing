/*
 * Copyright Kungfusoftware.es. All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// FabricGatewayApiApplyConfiguration represents a declarative configuration of the FabricGatewayApi type for use
// with apply.
type FabricGatewayApiApplyConfiguration struct {
	Port             *int     `json:"port,omitempty"`
	Hosts            []string `json:"hosts,omitempty"`
	GatewayName      *string  `json:"gatewayName,omitempty"`
	GatewayNamespace *string  `json:"gatewayNamespace,omitempty"`
}

// FabricGatewayApiApplyConfiguration constructs a declarative configuration of the FabricGatewayApi type for use with
// apply.
func FabricGatewayApi() *FabricGatewayApiApplyConfiguration {
	return &FabricGatewayApiApplyConfiguration{}
}

// WithPort sets the Port field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Port field is set to the value of the last call.
func (b *FabricGatewayApiApplyConfiguration) WithPort(value int) *FabricGatewayApiApplyConfiguration {
	b.Port = &value
	return b
}

// WithHosts adds the given value to the Hosts field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Hosts field.
func (b *FabricGatewayApiApplyConfiguration) WithHosts(values ...string) *FabricGatewayApiApplyConfiguration {
	for i := range values {
		b.Hosts = append(b.Hosts, values[i])
	}
	return b
}

// WithGatewayName sets the GatewayName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GatewayName field is set to the value of the last call.
func (b *FabricGatewayApiApplyConfiguration) WithGatewayName(value string) *FabricGatewayApiApplyConfiguration {
	b.GatewayName = &value
	return b
}

// WithGatewayNamespace sets the GatewayNamespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GatewayNamespace field is set to the value of the last call.
func (b *FabricGatewayApiApplyConfiguration) WithGatewayNamespace(value string) *FabricGatewayApiApplyConfiguration {
	b.GatewayNamespace = &value
	return b
}
