/*
 * Copyright Kungfusoftware.es. All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/kfsoftware/hlf-operator/pkg/apis/hlf.kungfusoftware.es/v1alpha1"
	hlfkungfusoftwareesv1alpha1 "github.com/kfsoftware/hlf-operator/pkg/client/applyconfiguration/hlf.kungfusoftware.es/v1alpha1"
	scheme "github.com/kfsoftware/hlf-operator/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// FabricChaincodeInstallsGetter has a method to return a FabricChaincodeInstallInterface.
// A group's client should implement this interface.
type FabricChaincodeInstallsGetter interface {
	FabricChaincodeInstalls() FabricChaincodeInstallInterface
}

// FabricChaincodeInstallInterface has methods to work with FabricChaincodeInstall resources.
type FabricChaincodeInstallInterface interface {
	Create(ctx context.Context, fabricChaincodeInstall *v1alpha1.FabricChaincodeInstall, opts v1.CreateOptions) (*v1alpha1.FabricChaincodeInstall, error)
	Update(ctx context.Context, fabricChaincodeInstall *v1alpha1.FabricChaincodeInstall, opts v1.UpdateOptions) (*v1alpha1.FabricChaincodeInstall, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, fabricChaincodeInstall *v1alpha1.FabricChaincodeInstall, opts v1.UpdateOptions) (*v1alpha1.FabricChaincodeInstall, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.FabricChaincodeInstall, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.FabricChaincodeInstallList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.FabricChaincodeInstall, err error)
	Apply(ctx context.Context, fabricChaincodeInstall *hlfkungfusoftwareesv1alpha1.FabricChaincodeInstallApplyConfiguration, opts v1.ApplyOptions) (result *v1alpha1.FabricChaincodeInstall, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, fabricChaincodeInstall *hlfkungfusoftwareesv1alpha1.FabricChaincodeInstallApplyConfiguration, opts v1.ApplyOptions) (result *v1alpha1.FabricChaincodeInstall, err error)
	FabricChaincodeInstallExpansion
}

// fabricChaincodeInstalls implements FabricChaincodeInstallInterface
type fabricChaincodeInstalls struct {
	*gentype.ClientWithListAndApply[*v1alpha1.FabricChaincodeInstall, *v1alpha1.FabricChaincodeInstallList, *hlfkungfusoftwareesv1alpha1.FabricChaincodeInstallApplyConfiguration]
}

// newFabricChaincodeInstalls returns a FabricChaincodeInstalls
func newFabricChaincodeInstalls(c *HlfV1alpha1Client) *fabricChaincodeInstalls {
	return &fabricChaincodeInstalls{
		gentype.NewClientWithListAndApply[*v1alpha1.FabricChaincodeInstall, *v1alpha1.FabricChaincodeInstallList, *hlfkungfusoftwareesv1alpha1.FabricChaincodeInstallApplyConfiguration](
			"fabricchaincodeinstalls",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1alpha1.FabricChaincodeInstall { return &v1alpha1.FabricChaincodeInstall{} },
			func() *v1alpha1.FabricChaincodeInstallList { return &v1alpha1.FabricChaincodeInstallList{} }),
	}
}
