/*
 * Copyright Kungfusoftware.es. All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/kfsoftware/hlf-operator/pkg/apis/hlf.kungfusoftware.es/v1alpha1"
	hlfkungfusoftwareesv1alpha1 "github.com/kfsoftware/hlf-operator/pkg/client/applyconfiguration/hlf.kungfusoftware.es/v1alpha1"
	scheme "github.com/kfsoftware/hlf-operator/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// FabricMainChannelsGetter has a method to return a FabricMainChannelInterface.
// A group's client should implement this interface.
type FabricMainChannelsGetter interface {
	FabricMainChannels() FabricMainChannelInterface
}

// FabricMainChannelInterface has methods to work with FabricMainChannel resources.
type FabricMainChannelInterface interface {
	Create(ctx context.Context, fabricMainChannel *v1alpha1.FabricMainChannel, opts v1.CreateOptions) (*v1alpha1.FabricMainChannel, error)
	Update(ctx context.Context, fabricMainChannel *v1alpha1.FabricMainChannel, opts v1.UpdateOptions) (*v1alpha1.FabricMainChannel, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, fabricMainChannel *v1alpha1.FabricMainChannel, opts v1.UpdateOptions) (*v1alpha1.FabricMainChannel, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.FabricMainChannel, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.FabricMainChannelList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.FabricMainChannel, err error)
	Apply(ctx context.Context, fabricMainChannel *hlfkungfusoftwareesv1alpha1.FabricMainChannelApplyConfiguration, opts v1.ApplyOptions) (result *v1alpha1.FabricMainChannel, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, fabricMainChannel *hlfkungfusoftwareesv1alpha1.FabricMainChannelApplyConfiguration, opts v1.ApplyOptions) (result *v1alpha1.FabricMainChannel, err error)
	FabricMainChannelExpansion
}

// fabricMainChannels implements FabricMainChannelInterface
type fabricMainChannels struct {
	*gentype.ClientWithListAndApply[*v1alpha1.FabricMainChannel, *v1alpha1.FabricMainChannelList, *hlfkungfusoftwareesv1alpha1.FabricMainChannelApplyConfiguration]
}

// newFabricMainChannels returns a FabricMainChannels
func newFabricMainChannels(c *HlfV1alpha1Client) *fabricMainChannels {
	return &fabricMainChannels{
		gentype.NewClientWithListAndApply[*v1alpha1.FabricMainChannel, *v1alpha1.FabricMainChannelList, *hlfkungfusoftwareesv1alpha1.FabricMainChannelApplyConfiguration](
			"fabricmainchannels",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1alpha1.FabricMainChannel { return &v1alpha1.FabricMainChannel{} },
			func() *v1alpha1.FabricMainChannelList { return &v1alpha1.FabricMainChannelList{} }),
	}
}
